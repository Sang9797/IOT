version: '3.8'

services:
  # Service Discovery
  eureka-server:
    image: steeltoeoss/eureka-server:4.1.0
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    networks:
      - iot-network

  # Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - iot-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - iot-network

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - iot-network

  # MQTT-Kafka Bridge
  mqtt-kafka-bridge:
    image: confluentinc/cp-kafka-connect:7.4.0
    container_name: mqtt-kafka-bridge
    depends_on:
      - kafka
      - mosquitto
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: mqtt-kafka-bridge
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: mqtt-connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: mqtt-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: mqtt-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: mqtt-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    volumes:
      - ./kafka-connect/mqtt-source-connector:/usr/share/confluent-hub-components
    networks:
      - iot-network

  # PostgreSQL Database for Device Metadata
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: iot_devices
      POSTGRES_USER: iot_user
      POSTGRES_PASSWORD: iot_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - iot-network

  # InfluxDB for Time Series Data
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin123
      DOCKER_INFLUXDB_INIT_ORG: iot-org
      DOCKER_INFLUXDB_INIT_BUCKET: iot-data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-token
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - iot-network

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - iot-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      - eureka-server
      - kafka
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - iot-network

  # Device Management Service
  device-management-service:
    build:
      context: .
      dockerfile: device-management-service/Dockerfile
    container_name: device-management-service
    depends_on:
      - eureka-server
      - postgres
      - kafka
    ports:
      - "8081:8081"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/iot_devices
      - SPRING_DATASOURCE_USERNAME=iot_user
      - SPRING_DATASOURCE_PASSWORD=iot_password
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - iot-network

  # Device Processor Service
  device-processor-service:
    build:
      context: .
      dockerfile: device-processor-service/Dockerfile
    container_name: device-processor-service
    depends_on:
      - eureka-server
      - kafka
      - mosquitto
      - influxdb
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MQTT_BROKER_URL=tcp://mosquitto:1883
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-token
    networks:
      - iot-network

  # Analysis Report Service
  analysis-report-service:
    build:
      context: .
      dockerfile: analysis-report-service/Dockerfile
    container_name: analysis-report-service
    depends_on:
      - eureka-server
      - kafka
      - influxdb
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=my-token
    networks:
      - iot-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    depends_on:
      - eureka-server
      - kafka
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - iot-network

volumes:
  postgres_data:
  influxdb_data:

networks:
  iot-network:
    driver: bridge
